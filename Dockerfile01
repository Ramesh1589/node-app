FROM node:10

# Create app directory
WORKDIR /node-app

# Install app dependencies
# A wildcard is used to ensure both package.json AND package-lock.json are copied
# where available (npm@5+)
COPY package*.json ./

RUN npm install --production
# If you are building your code for production
# RUN npm ci --only=production

# Bundle app source
COPY . .

# 80 = HTTP, 443 = HTTPS, 8000 = server, 35729 = livereload, 8080 = node-inspector
EXPOSE 80 443 8000 35729 8080


# Set development environment as default
ENV NODE_ENV development

# Install Utilities
RUN apt-get update -q  \
 && apt-get install -yqq \
 curl \
 git \
 ssh \
 gcc \
 make \
 build-essential \
 libkrb5-dev \
 sudo \
 apt-utils \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install nodejs
RUN curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
RUN sudo apt-get install -yq nodejs \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install APP Prerequisites
RUN npm install --quiet -g pm2 && npm cache clean

RUN mkdir -p /opt/nodeApp/public/lib

WORKDIR /opt/nodeApp

# Copies the local package.json file to the container
# and utilities docker container cache to not needing to rebuild
# and install node_modules/ everytime we build the docker, but only
# when the local package.json file changes.
# Install npm packages
COPY package.json /opt/nodeApp/package.json

RUN npm install --quiet && npm cache clean

COPY . /opt/nodeApp

# Run MEAN.JS server
CMD npm install && npm dev